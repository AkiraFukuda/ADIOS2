# Ideally this would be done in seperate workflows but placing them all # in one is currently necessary to enforce job dependencies

name: GitHub Actions

on: 
  push: 
    branches: 
    - master 
    - release* 
  pull_request: 
    branches: 
    - master 
    - release* 

jobs:

#######################################
# Formatting jobs
#######################################

  format:
    runs-on: ubuntu-latest
    container:
      image: ornladios/adios2:ci-formatting

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: CXX
      run: scripts/ci/scripts/run-clang-format.sh
    - name: Python
      run: scripts/ci/scripts/run-flake8.sh


#######################################
# Build and test jobs
#######################################

#  linux:
#    needs: format
#    runs-on: ubuntu-latest
#    container:
#      image: ${{ matrix.container }}
#      options: --shm-size=1g
#      env:
#        GH_YML_JOBNAME: ${{ matrix.jobname }}
#        GH_YML_OS: Linux
#
#    strategy:
#      fail-fast: false
#      matrix:
#        jobname: [
#          el7,
#          el7-gnu8-ohpc,
#          el7-gnu8-openmpi-ohpc,
#          el7-gnu8-openmpi-ohpc-static,
#          suse-pgi,
#          suse-pgi-openmpi,
#          debian-sid,
#          debian-sid-openmpi ]
#        include:
#        - jobname: el7
#          container: ornladios/adios2:ci-el7
#        - jobname: el7-gnu8-ohpc
#          container: ornladios/adios2:ci-el7-gnu8-ohpc
#        - jobname: el7-gnu8-openmpi-ohpc
#          container: ornladios/adios2:ci-el7-gnu8-openmpi-ohpc
#        - jobname: el7-gnu8-openmpi-ohpc-static
#          container: ornladios/adios2:ci-el7-gnu8-openmpi-ohpc
#        - jobname: suse-pgi
#          container: ornladios/adios2:ci-suse-nvhpcsdk
#        - jobname: suse-pgi-openmpi
#          container: ornladios/adios2:ci-suse-nvhpcsdk-openmpi
#        - jobname: debian-sid
#          container: ornladios/adios2:ci-debian-sid
#        - jobname: debian-sid-openmpi
#          container: ornladios/adios2:ci-debian-sid
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.event.pull_request.head.sha }}
#    - name: Setup
#      run: scripts/ci/gh-actions/linux-setup.sh
#    - name: Update
#      run: scripts/ci/gh-actions/run.sh update
#    - name: Configure
#      run: scripts/ci/gh-actions/run.sh configure
#    - name: Build
#      run: scripts/ci/gh-actions/run.sh build
#    - name: Test
#      run: scripts/ci/gh-actions/run.sh test
#
#  linux_emu:
#    needs: format
#    runs-on: ubuntu-latest
#    container:
#      image: ${{ matrix.container }}
#      options: --privileged --shm-size=1g
#      env:
#        GH_YML_JOBNAME: ${{ matrix.jobname }}
#        GH_YML_OS: Linux
#
#    strategy:
#      fail-fast: false
#      matrix:
#        jobname: [
#          power8-el7-xl,
#          power8-el7-xl-smpi ]
#        include:
#        - jobname: power8-el7-xl
#          container: ornladios/adios2:ci-x86_64-power8-el7-xl
#          arch: ppc64le
#        - jobname: power8-el7-xl-smpi
#          container: ornladios/adios2:ci-x86_64-power8-el7-xl-smpi
#          arch: ppc64le
#
#    steps:
#    - name: Emulation Setup
#      run: /x86_64/bin/register --reset --targets ${{ matrix.arch }}
#      env:
#        PATH: /x86_64/bin
#    - name: Node.js Setup
#      run: mount --bind /x86_64/bin/node /__e/node12/bin/node
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.event.pull_request.head.sha }}
#    - name: Setup
#      run: scripts/ci/gh-actions/linux-setup.sh
#    - name: Update
#      run: scripts/ci/gh-actions/run.sh update
#    - name: Configure
#      run: scripts/ci/gh-actions/run.sh configure
#    - name: Build
#      run: scripts/ci/gh-actions/run.sh build
#    - name: Test
#      run: scripts/ci/gh-actions/run.sh test
#
#  linux_spack:
#    needs: format
#    runs-on: ubuntu-latest
#    container:
#      image: ${{ matrix.container }}
#      options: --shm-size=1g
#      env:
#        GH_YML_JOBNAME: ${{ matrix.jobname }}
#        GH_YML_OS: Linux
#
#    strategy:
#      fail-fast: false
#      matrix:
#        jobname: [
#          el7-spack,
#          ubuntu1804-spack ]
#        include:
#        - jobname: el7-spack
#          container: ornladios/adios2:ci-el7-spack
#        - jobname: ubuntu1804-spack
#          container: ornladios/adios2:ci-ubuntu1804-spack
#   
#    defaults:
#      run:
#        shell: bash -c "source /opt/spack/share/spack/setup-env.sh && spack env activate adios2-ci && bash {0}"
#
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        ref: ${{ github.event.pull_request.head.sha }}
#      env:
#        PATH: /opt/spack/var/spack/environments/adios2-ci/.spack-env/view/bin:/usr/bin:/bin
#    - name: Update
#      run: scripts/ci/gh-actions/run.sh update
#    - name: Configure
#      run: scripts/ci/gh-actions/run.sh configure
#    - name: Build
#      run: scripts/ci/gh-actions/run.sh build
#    - name: Test
#      run: scripts/ci/gh-actions/run.sh test


#######################################
# Docker container jobs
#######################################

  docker:
    needs: format
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        baseos: [
          ubuntu18.04,
          ubuntu20.04 ]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Build image
      run: |
          adios_ver="pr${{ github.event.pull_request.number }}"
          if [ "${adios_ver}" == "pr" ]
          then
              adios_ver="${GITHUB_REF#refs/heads/}"
          fi
          echo "adios_ver=${adios_ver}"
          docker build \
              -t ornladios/adios2:${adios_ver}-${{ matrix.baseos }} \
              --build-arg adios_ver=${adios_ver} \
              --build-arg base=${{ matrix.baseos }} \
              scripts/docker/complete
    - name: Push image to Docker Hub
      if: github.event_name == 'push'
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
          docker login \
              --username="${DOCKERHUB_USERNAME}" \
              --password="${DOCKERHUB_PASSWORD}" && \
          docker push \
              ornladios/adios2:${GITHUB_REF##refs/heads/}-${{ matrix.baseos }}

#######################################
# Contract testing jobs
#######################################

  contract-setup:
    needs: format
    runs-on: ubuntu-latest
    container:
      image: ornladios/adios2:dependencies-ubuntu20.04
      options: --user=root

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Configure
      run: |
        mkdir build
        cd build
        . /etc/profile
        cmake \
          -DCMAKE_INSTALL_PREFIX=/opt/adios \
          -DBUILD_TESTING=OFF \
          -DADIOS2_BUILD_EXAMPLES=OFF \
          ..
    - name: Build
      run: |
        cd build
        make -j$(grep -c '^processor' /proc/cpuinfo)
    - name: Install
      run: |
        cd build
        . /etc/profile
        make install
        echo 'export PATH="/opt/adios/bin:${PATH}"' >> /etc/profile.d/adios2.sh
        echo 'export LD_LIBRARY_PATH="/opt/adios/lib:${LD_LIBRARY_PATH}"' \
          >> /etc/profile.d/adios2.sh
        echo 'export CMAKE_PREFIX_PATH="/opt/adios:${CMAKE_PREFIX_PATH}"' \
          >> /etc/profile.d/adios2.sh
        echo 'export PYTHONPATH="/opt/adios/lib/python3/dist-packages:${PYTHONPATH}"' \
          >> /etc/profile.d/adios2.sh
    - name: Archive
      run: |
        tar -cvf adios-installation.tar /opt/adios /etc/profile.d/adios2.sh
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        retention-days: 1
        name: contract-adios-installation ${{ github.sha }}
        path: adios-installation.tar


  contract:
    needs: contract-setup
    runs-on: ubuntu-latest
    container:
      image: ornladios/adios2:dependencies-ubuntu20.04
      options: --user=root

    strategy:
      fail-fast: false
      matrix:
        code: [
          examples,
          lammps ]
        include:
        - code: examples
          repo: ornladios/ADIOS2-Examples
          ref: master
        - code: lammps
          repo: lammps/lammps
          ref: patch_10Feb2021

    defaults:
      run:
        shell: su adios -c "bash --login {0}"

    steps:
    - name: Download adios
      uses: actions/download-artifact@v2
      with:
        name: contract-adios-installation ${{ github.sha }}
    - name: Extract adios
      shell: bash
      run: tar -C / -xvf ${GITHUB_WORKSPACE}/adios-installation.tar
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        path: adios2-source
    - uses: actions/checkout@v2
      with:
        repository: ${{ matrix.repo }}
        ref: ${{ matrix.ref }}
        path: source
    - name: Fixup permissions for adios user
      shell: bash
      run: chown -R adios:adios ${GITHUB_WORKSPACE}
    - name: Configure
      run: adios2-source/testing/contract/${{ matrix.code }}/config.sh
    - name: Build
      run: adios2-source/testing/contract/${{ matrix.code }}/build.sh
    - name: Install
      run: adios2-source/testing/contract/${{ matrix.code }}/install.sh
    - name: Test
      run: adios2-source/testing/contract/${{ matrix.code }}/test.sh
