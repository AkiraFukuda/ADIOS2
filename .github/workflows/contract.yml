name: Contract

on: 
  push: 
    branches: 
    - master 
    - release* 
  pull_request: 
    branches: 
    - master 
    - release* 

jobs:
  install-adios2:
    runs-on: ubuntu-latest
    container:
      image: ornladios/adios2:dependencies-ubuntu20.04
      options: --user=root

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Configure
      run: |
        mkdir build
        cd build
        . /etc/profile
        cmake \
          -DCMAKE_INSTALL_PREFIX=/opt/adios \
          -DBUILD_TESTING=OFF \
          -DADIOS2_BUILD_EXAMPLES=OFF \
          ..
    - name: Build
      run: |
        cd build
        make -j$(grep -c '^processor' /proc/cpuinfo)
    - name: Install
      run: |
        cd build
        . /etc/profile
        make install
        echo 'export PATH="/opt/adios/bin:${PATH}"' >> /etc/profile.d/adios2.sh
        echo 'export LD_LIBRARY_PATH="/opt/adios/lib:${LD_LIBRARY_PATH}"' \
          >> /etc/profile.d/adios2.sh
        echo 'export CMAKE_PREFIX_PATH="/opt/adios:${CMAKE_PREFIX_PATH}"' \
          >> /etc/profile.d/adios2.sh
        echo 'export PYTHONPATH="/opt/adios/lib/python3/dist-packages:${PYTHONPATH}"' \
          >> /etc/profile.d/adios2.sh
    - name: Archive
      run: |
        tar -cvf adios-installation.tar /opt/adios /etc/profile.d/adios2.sh
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        retention-days: 1
        name: contract-adios-installation ${{ github.sha }}
        path: adios-installation.tar


  examples:
    runs-on: ubuntu-latest
    needs: install-adios2
    container:
      image: ornladios/adios2:dependencies-ubuntu20.04
      options: --user=root

    defaults:
      run:
        shell: su adios -c "bash --login {0}"

    steps:
    - name: Download adios
      uses: actions/download-artifact@v2
      with:
        name: contract-adios-installation ${{ github.sha }}
    - name: Extract adios
      shell: bash
      run: tar -C / -xvf ${GITHUB_WORKSPACE}/adios-installation.tar
    - uses: actions/checkout@v2
      with:
        ref: master
        repository: ornladios/ADIOS2-Examples
    - name: Fixup permissions for adios user
      shell: bash
      run: chown -R adios:adios ${GITHUB_WORKSPACE}
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake ..
    - name: Build
      run: |
        cd build
        make -j$(grep -c '^processor' /proc/cpuinfo)
    - name: Test
      run: |
        cd build
        ctest -VV -j 1


  lammps:
    runs-on: ubuntu-latest
    needs: install-adios2
    container:
      image: ornladios/adios2:dependencies-ubuntu20.04
      options: --user=root

    defaults:
      run:
        shell: su adios -c "bash --login {0}"

    steps:
    - name: Download adios
      uses: actions/download-artifact@v2
      with:
        name: contract-adios-installation ${{ github.sha }}
    - name: Extract adios
      shell: bash
      run: tar -C / -xvf ${GITHUB_WORKSPACE}/adios-installation.tar
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        path: ADIOS2
    - uses: actions/checkout@v2
      with:
        ref: patch_10Feb2021
        repository: lammps/lammps
        path: source
    - name: Fixup permissions for adios user
      shell: bash
      run: chown -R adios:adios ${GITHUB_WORKSPACE}
    - name: Configure
      run: |
        mkdir -p build
        cd build
        cmake \
          -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/install \
          -DBUILD_MPI=yes \
          -DBUILD_EXE=yes \
          -DBUILD_LIB=no \
          -DBUILD_DOC=no \
          -DLAMMPS_SIZES=smallbig \
          -DPKG_USER-ADIOS=yes \
          ../source/cmake
    - name: Build
      run: |
        cd build
        make -j$(grep -c '^processor' /proc/cpuinfo)
    - name: Install
      run: |
        cd build
        make install
    - name: Test
      run: |
        cp -rv ADIOS2/testing/contract/lammps test
        cd test
        mpiexec -np 4 --oversubscribe ../install/bin/lmp -in in.test
        ./check_results.sh
