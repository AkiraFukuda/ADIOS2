if(POLICY CMP0028)
  cmake_policy(SET CMP0028 NEW)
endif()

if(POLICY CMP0074)
  cmake_policy(SET CMP0074 NEW)
endif()

include(CMakeFindDependencyMacro)

if(NOT @BUILD_SHARED_LIBS@)
  # Ensure C is enabled for use by package dependencies found below.
  enable_language(C)
  # Ensure CXX is enabled so we can link against the C++ runtime library.
  enable_language(CXX)
endif()

set(ADIOS2_HAVE_Fortran @ADIOS2_HAVE_Fortran@)

set(ADIOS2_HAVE_MPI @ADIOS2_HAVE_MPI@)
if(ADIOS2_HAVE_MPI)
  find_dependency(MPI)
endif()

if(NOT @BUILD_SHARED_LIBS@)
  set(ADIOS2_HAVE_Blosc @ADIOS2_HAVE_Blosc@)
  if(ADIOS2_HAVE_Blosc)
    find_dependency(Blosc)
  endif()

  set(ADIOS2_HAVE_BZip2 @ADIOS2_HAVE_BZip2@)
  if(ADIOS2_HAVE_BZip2)
    find_dependency(BZip2)
  endif()

  set(ADIOS2_HAVE_ZFP @ADIOS2_HAVE_ZFP@)
  if(ADIOS2_HAVE_ZFP)
    find_dependency(ZFP)
  endif()

  set(ADIOS2_HAVE_SZ @ADIOS2_HAVE_SZ@)
  if(ADIOS2_HAVE_SZ)
    find_dependency(SZ)
  endif()
  
  set(ADIOS2_HAVE_MGARD @ADIOS2_HAVE_MGARD@)
  if(ADIOS2_HAVE_MGARD)
    find_dependency(MGARD)
  endif()

  set(ADIOS2_HAVE_PNG @ADIOS2_HAVE_PNG@)
  if(ADIOS2_HAVE_PNG)
    find_dependency(PNG)
  endif()

  set(ADIOS2_HAVE_DataSpaces @ADIOS2_HAVE_DataSpaces@)
  if(ADIOS2_HAVE_DataSpaces)
    find_dependency(DataSpaces)
  endif()

  set(ADIOS2_HAVE_ZeroMQ @ADIOS2_HAVE_ZeroMQ@)
  if(ADIOS2_HAVE_ZeroMQ)
    find_dependency(ZeroMQ)
  endif()

  set(ADIOS2_HAVE_HDF5 @ADIOS2_HAVE_HDF5@)
  if(ADIOS2_HAVE_HDF5)
    find_dependency(HDF5 COMPONENTS C)
  endif()

  set(ADIOS2_HAVE_SST @ADIOS2_HAVE_SST@)
  if(ADIOS2_HAVE_SST)
    set(ADIOS2_SST_HAVE_LIBFABRIC @ADIOS2_SST_HAVE_LIBFABRIC@)
    if(ADIOS2_SST_HAVE_LIBFABRIC)
      find_dependency(LIBFABRIC)
    endif()

    find_dependency(EVPath)
    add_library(adios2::thirdparty::EVPath INTERFACE IMPORTED)
    set_target_properties(adios2::thirdparty::EVPath PROPERTIES
      INTERFACE_LINK_LIBRARIES EVPath::EVPath
    )
  endif()

endif()

include("${CMAKE_CURRENT_LIST_DIR}/adios2-config-version.cmake")

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(${CMAKE_FIND_PACKAGE_NAME} CONFIG_MODE)

if(NOT TARGET adios2::core)
  include("${CMAKE_CURRENT_LIST_DIR}/adios2-targets.cmake")
  # Filter our usage requirements to avoid non-enabled languages.
  if(NOT CMAKE_C_COMPILER_LOADED)
    if(TARGET adios2::core_mpi)
      # Since C is not available, use MPI through MPI_CXX instead.
      get_property(_adios2_link_libs TARGET adios2::core_mpi PROPERTY INTERFACE_LINK_LIBRARIES)
      string(REGEX REPLACE "MPI::MPI_C(;|>|$)" "MPI::MPI_CXX\\1" _adios2_link_libs "${_adios2_link_libs}")
      set_property(TARGET adios2::core_mpi PROPERTY INTERFACE_LINK_LIBRARIES "${_adios2_link_libs}")
      unset(_adios2_link_libs)
    endif()
  endif()
  if(NOT CMAKE_CXX_COMPILER_LOADED)
    # Avoid requiring compile features for non-enabled languages.
    get_property(_adios2_cxx_features TARGET adios2::core PROPERTY INTERFACE_COMPILE_FEATURES)
    list(FILTER _adios2_cxx_features EXCLUDE REGEX "^cxx_")
    set_property(TARGET adios2::core PROPERTY INTERFACE_COMPILE_FEATURES "${_adios2_cxx_features}")
    unset(_adios2_cxx_features)
  endif()
endif()

# backwards compatibility for things that still use package variables
set(${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS)
set(${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES adios2::adios2)
